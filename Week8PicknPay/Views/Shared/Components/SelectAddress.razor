
@using Microsoft.AspNetCore.Components.Web
@using Week8PicknPay.Models
@using Week8PicknPay.Services

@inject IAddressService _addressService
@inject IOrderService _orderService
@inject IUserService _userService


@if (UserAddresses.Count() > 0)
{
    <div class="strip">
        <b>SELECT AN ADDRESS FROM YOUR LIST OF ADDRESSES</b>
    </div>

    <p style="text-align: center;">Click on an address to select it.</p>

    @foreach (var address in UserAddresses)
    {
        if (SelectedAddress == address)
        {
            <div class="address-container selected">
                <div class="address-name">
                    <i class="fas fa-user"></i>
                    <p> @User.FirstName @User.LastName</p>
                </div>
                <div class="address-content">
                    <div style="display: flex">
                        <i class="fas fa-location-dot"></i>
                        <p>@address.HouseNo, @address.Street, @address.City, @address.LGA, @address.State.</p>
                    </div>
                    <div style="display: flex">
                        <i class="fas fa-phone"></i>
                        <p>@User.PhoneNumber</p>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="address-container" @onclick="() => SetSelectedAddress(address)">
                <div class="address-name">
                    <i class="fas fa-user"></i>
                    <p> @User.FirstName @User.LastName</p>
                </div>
                <div class="address-content">
                    <div style="display: flex">
                        <i class="fas fa-location-dot"></i>
                        <p>@address.HouseNo, @address.Street, @address.City, @address.LGA, @address.State.</p>
                    </div>

                    <div style="display: flex">
                        <i class="fas fa-phone"></i>
                        <p>@User.PhoneNumber</p>
                    </div>
                </div>

            </div>
        }
    }
    if (SelectedAddress != null)
    {
        <a class="btn btn-primary" @onclick="() => SaveSelectedAddress()" href="/order/checkout"> Use Selected Address</a>
    }
    else
    {
        <button class="btn btn-primary">No Address Selected!</button>
    }
}
else
{
    <div class="no-address">
        <h4>You currently have no saved address!</h4>
    </div>
}


@code {

    [Parameter]
    public string UserId { get; set; }

    public IEnumerable<Address> UserAddresses { get; set; }
    public Address SelectedAddress { get; set; }
    public User User { get; set; }

    protected override async void OnInitialized()
    {
        base.OnParametersSet();
        UserAddresses = _addressService.GetUserAddresses(UserId);
        User = await _userService.GetUserByIdAsync(UserId);
    }

    private void SetSelectedAddress(Address address)
    {
        SelectedAddress = address;
    }

    private void SaveSelectedAddress()
    {
        _orderService.OrderAddress(SelectedAddress);
    }
}
